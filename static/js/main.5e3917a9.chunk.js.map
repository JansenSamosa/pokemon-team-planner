{"version":3,"sources":["redux/reducers/pokemonReducer.js","redux/reducers/teamReducer.js","redux/reducers/index.js","redux/types.js","redux/store.js","Helpers.js","components/PokemonType.js","components/pokemonSelection/Pokemon.js","redux/actions/teamActions.js","components/pokemonSelection/PokemonList.js","components/pokemonSelection/SearchFilterSortBar.js","components/pokemonSelection/PokemonSelection.js","components/teamManager/PokemonMember.js","components/teamManager/TeamManager.js","components/infoPanel/InfoPanel.js","App.js","redux/actions/pokemonActions.js","index.js"],"names":["initialState","team","combineReducers","pokemon","state","action","type","payload","sort","a","b","num","i","length","evolution_chain_url","isFinalEvo","newTeam","undefined","push","pokemonMember","splice","slot","middleware","thunk","store","createStore","rootReducer","applyMiddleware","getTypeColor","color","getTypeDefenseStrengths","types","strengths","normal","flying","ground","bug","steel","water","electric","ice","dark","fighting","poison","rock","ghost","fire","grass","psychic","dragon","fairy","PokemonType","getStyle","props","noBorder","backgroundColor","border","chroma","darken","className","style","this","charAt","toUpperCase","slice","Component","Pokemon","addPokemonToTeam","addToTeam","getPokedexNum","toString","getTypeColorBarStyle","typeIndex","saturate","width","renderStats","jsx","stats","map","stat","index","key","name","onClick","src","sprite","connect","dispatch","PokemonList","getStatAverage","getPokemonList","searchOptions","search","typeFilter","finalEvoFilter","toLowerCase","replace","pokemonList","filter","includes","isBaby","height","itemCount","itemSize","SearchFilterSortBar","setSearchOptions","setTimeout","changeSearch","e","setState","target","value","setTypeFilter","setSort","toggleFinalEvoFilter","getToggleStyle","bool","onChange","bind","placeholder","PokemonSelection","newSearchOptions","PokemonMember","removePokemonFromTeam","removeFromTeam","borderColor","borderRight","borderBottom","renderName","renderSprite","alt","renderTypes","ownProps","parseInt","TeamManager","InfoPanel","getPokemon","id","getAvgStrengths","teamTypeStrengths","memberid","avgStrengths","getAvgStats","pokemonStats","avgStats","j","Math","round","renderOverview","good","average","bad","strength","renderInfoPanel","App","fetchPoke","setInterval","Promise","all","axios","get","then","response","res1","res2","data","reverse","newPokemon","base_stat","is_baby","sprites","front_default","evolution_chain","url","catch","err","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e3917a9.chunk.js","sourcesContent":["import { FETCH_POKEMON } from '../types'\r\n\r\nconst initialState = []\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POKEMON': \r\n            let pokemon = action.payload.pokemon.sort((a, b) => a.num - b.num)\r\n            for(let i=0; i<pokemon.length; i++) {\r\n                //set isFinalEvo\r\n                if(i > 0) {\r\n                    if(pokemon[i].evolution_chain_url !== pokemon[i-1].evolution_chain_url) {\r\n                        pokemon[i-1].isFinalEvo = true\r\n                    }\r\n                }\r\n            }\r\n            return [...pokemon]\r\n        default:\r\n            return state\r\n    }\r\n}","import { ADD_TO_TEAM, REMOVE_FROM_TEAM} from '../types'\r\n\r\nconst initialState = {\r\n    team: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    let newTeam = undefined\r\n    switch(action.type) {\r\n        case ADD_TO_TEAM:\r\n            newTeam = state.team\r\n            if(newTeam.length < 6) {\r\n                newTeam.push(action.payload.pokemonMember)\r\n            }\r\n            return {...state, team: newTeam}                                        \r\n        case REMOVE_FROM_TEAM: \r\n            newTeam = state.team\r\n            newTeam.splice(action.payload.slot - 1, 1)\r\n            return {...state, team: newTeam}                                        \r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport pokemonReducer from './pokemonReducer'\r\nimport teamReducer from './teamReducer'\r\n/* createStore requites the 1st argument(rootReducer) to be a function, hence\r\nwhy we are exporting a function. */\r\n\r\n/* combineReducers takes in an object {} */\r\n\r\n/* combineReducer  combines all reducers. reducers can include postReducer, \r\nauthReducer, todoReducer, assignmentReducer, etc... basically any\r\nreducer you make */\r\n\r\nexport default combineReducers({\r\n    pokemon: pokemonReducer,\r\n    team: teamReducer\r\n})\r\n","export const FETCH_POKEMON = 'FETCH_POKEMON';\r\n\r\nexport const ADD_TO_TEAM = 'ADD_TO_TEAM'\r\nexport const REMOVE_FROM_TEAM = 'REMOVE_FROM_TEAM'\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/index.js'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    applyMiddleware(...middleware),\r\n\r\n)\r\n\r\n\r\nexport default store;\r\n\r\n/*compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )*/","//get color of type ie - Fire = red, Water = blue\r\nexport const getTypeColor = type => {\r\n    let color = ''\r\n    switch(type) {\r\n        case 'normal':\r\n            color='#bebeb2'\r\n            break\r\n        case 'grass':\r\n            color='#8cd751'\r\n            break\r\n        case 'fire':\r\n            color='#fa5643'\r\n            break\r\n        case 'water':\r\n            color='#56aeff'\r\n            break\r\n        case 'fighting':\r\n            color='#a85644'\r\n            break\r\n        case 'flying':\r\n            color='#79a3ff'\r\n            break\r\n        case 'poison':\r\n            color='#ab5da2'\r\n            break\r\n        case 'ground':\r\n            color='#e9c856'\r\n            break\r\n        case 'rock':\r\n            color='#cdbc72'\r\n            break\r\n        case 'bug':\r\n            color='#c3d21f'\r\n            break\r\n        case 'ghost':\r\n            color='#7975d7'\r\n            break\r\n        case 'electric':\r\n            color='#fde53c'\r\n            break\r\n        case 'psychic':\r\n            color='#f26295'\r\n            break\r\n        case 'ice':\r\n            color='#96f1ff'\r\n            break\r\n        case 'dragon':\r\n            color='#8673ff'\r\n            break\r\n        case 'dark':\r\n            color='#866350'\r\n            break\r\n        case 'steel':\r\n            color='#c4c2db'\r\n            break\r\n        case 'fairy':\r\n            color='#faadff'\r\n            break\r\n        default:\r\n            color='#bebeb2'\r\n            break\r\n    }\r\n    return color\r\n}\r\n\r\n//gets strengths and weaknesses based on types\r\nexport const getTypeDefenseStrengths = types => {\r\n    //initializes strengths/weaknesses\r\n    let strengths = {normal: 1,flying: 1,ground: 1,bug: 1,steel: 1,water: 1,electric: 1,ice: 1,dark: 1,\r\n        fighting: 1,poison: 1,rock: 1,ghost: 1,fire: 1,grass: 1,psychic: 1,dragon: 1,fairy: 1}\r\n\r\n    for(let i = 0; i < types.length; i++) {\r\n        switch(types[i]) {\r\n            case 'normal':\r\n                strengths.fighting *= 2\r\n                strengths.ghost *= 0\r\n                break\r\n            case 'grass':\r\n                strengths.flying *= 2\r\n                strengths.poison *= 2\r\n                strengths.bug *= 2\r\n                strengths.fire *= 2\r\n                strengths.ice *= 2\r\n                strengths.ground *= .5\r\n                strengths.water *= .5\r\n                strengths.grass *= .5\r\n                strengths.electric *= .5\r\n                break\r\n            case 'fire':\r\n                strengths.ground *= 2\r\n                strengths.rock *= 2\r\n                strengths.water *= 2\r\n                strengths.bug *= .5\r\n                strengths.steel *= .5\r\n                strengths.fire *= .5\r\n                strengths.grass *= .5\r\n                strengths.ice *= .5\r\n                strengths.fairy *= .5\r\n                break\r\n            case 'water':\r\n                strengths.grass *= 2\r\n                strengths.electric *= 2\r\n                strengths.steel *= .5\r\n                strengths.fire *= .5\r\n                strengths.water *= .5\r\n                strengths.ice *= .5\r\n                break\r\n            case 'fighting':\r\n                strengths.flying *= 2\r\n                strengths.psychic *= 2\r\n                strengths.fairy *= 2\r\n                strengths.rock *= .5\r\n                strengths.bug *= .5\r\n                strengths.dark *= .5\r\n                break\r\n            case 'flying':\r\n                strengths.rock *= 2\r\n                strengths.electric *= 2\r\n                strengths.ice *= 2\r\n                strengths.grass *= .5\r\n                strengths.bug *= .5\r\n                strengths.fighting *= .5\r\n                strengths.ground *= 0\r\n                break\r\n            case 'poison':\r\n                strengths.ground *= 2\r\n                strengths.psychic *= 2\r\n                strengths.fighting *= .5\r\n                strengths.poison *= .5\r\n                strengths.bug *= .5\r\n                strengths.grass *= .5\r\n                strengths.fairy *= .5\r\n                break\r\n            case 'ground':\r\n                strengths.water *= 2\r\n                strengths.grass *= 2\r\n                strengths.ice *= 2\r\n                strengths.rock *= .5\r\n                strengths.poison *= .5\r\n                strengths.electric *= 0\r\n                break\r\n            case 'rock':\r\n                strengths.fighting *= 2\r\n                strengths.ground *= 2\r\n                strengths.steel *= 2\r\n                strengths.water *= 2\r\n                strengths.grass *= 2\r\n                strengths.normal *= .5\r\n                strengths.flying *= .5\r\n                strengths.poison *= .5\r\n                strengths.fire *= .5\r\n                break\r\n            case 'bug':\r\n                strengths.flying *= 2\r\n                strengths.rock *= 2\r\n                strengths.fire *= 2\r\n                strengths.fighting *= .5\r\n                strengths.ground *= .5\r\n                strengths.grass *= .5\r\n                break\r\n            case 'ghost':\r\n                strengths.ghost *= 2\r\n                strengths.dark *= 2\r\n                strengths.poison *= .5\r\n                strengths.bug *= .5\r\n                strengths.normal *= 0\r\n                strengths.fighting *= 0\r\n                break\r\n            case 'electric':\r\n                strengths.ground *= 2\r\n                strengths.flying *= .5\r\n                strengths.steel *= .5\r\n                strengths.electric *= .5\r\n                break\r\n            case 'psychic':\r\n                strengths.bug *= 2\r\n                strengths.ghost *= 2\r\n                strengths.dark *= 2\r\n                strengths.fighting *= .5\r\n                strengths.psychic *= .5\r\n                break\r\n            case 'ice':\r\n                strengths.fighting *= 2\r\n                strengths.rock *= 2\r\n                strengths.steel *= 2\r\n                strengths.fire *= 2\r\n                strengths.ice *= .5\r\n                break\r\n            case 'dragon':\r\n                strengths.ice *= 2\r\n                strengths.dragon *= 2\r\n                strengths.fairy *= 2\r\n                strengths.fire *= .5\r\n                strengths.water *= .5\r\n                strengths.grass *= .5\r\n                strengths.electric *= .5\r\n                break\r\n            case 'dark':\r\n                strengths.fighting *= 2\r\n                strengths.bug *= 2\r\n                strengths.fairy *= 2\r\n                strengths.ghost *= .5\r\n                strengths.dark *= .5\r\n                strengths.psychic *= 0\r\n                break\r\n            case 'steel':\r\n                strengths.fighting *= 2\r\n                strengths.ground *= 2\r\n                strengths.fire *= 2\r\n                strengths.normal *= .5\r\n                strengths.flying *= .5\r\n                strengths.rock *= .5\r\n                strengths.bug *= .5\r\n                strengths.steel *= .5\r\n                strengths.grass *= .5\r\n                strengths.psychic *= .5\r\n                strengths.ice *= .5\r\n                strengths.dragon *= .5\r\n                strengths.fairy *= .5\r\n                strengths.poison *= 0\r\n                break\r\n            case 'fairy':\r\n                strengths.poison *= 2\r\n                strengths.steel *= 2\r\n                strengths.dark *= .5\r\n                strengths.bug *= .5\r\n                strengths.fighting *= .5\r\n                strengths.dragon *= 0\r\n                break \r\n            default:\r\n                break\r\n        }\r\n    }\r\n    return strengths\r\n}\r\n","import React, { Component } from 'react'\r\nimport chroma from 'chroma-js'\r\n\r\nimport { getTypeColor } from '../Helpers.js'\r\n\r\nimport './misc.scss'\r\n\r\nexport class PokemonType extends Component {\r\n\r\n    getStyle = () => {\r\n        if(this.props.noBorder) {\r\n            return { backgroundColor: `${getTypeColor(this.props.type)}`}\r\n        } else {\r\n            return { backgroundColor: `${getTypeColor(this.props.type)}`,\r\n                    border: `.25vw solid ${chroma(getTypeColor(this.props.type)).darken(.5)}`}\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pokemon-type' style={this.getStyle()}>\r\n                {this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonType\r\n","import React, { Component } from 'react'\r\nimport chroma from 'chroma-js'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PokemonType from '../PokemonType'\r\n\r\nimport { getTypeColor } from '../../Helpers'\r\n\r\nimport { addToTeam } from '../../redux/actions/teamActions'\r\n\r\nexport class Pokemon extends Component {\r\n\r\n    addPokemonToTeam = () => {\r\n        //Adds this pokemon to the team\r\n        this.props.addToTeam(this.props.pokemon)\r\n    }\r\n\r\n    getPokedexNum = () => {\r\n        let { num } = this.props.pokemon\r\n        num = num.toString()\r\n        \r\n        if(num.length === 1) num = '00' + num\r\n        if(num.length === 2) num = '0' + num\r\n\r\n        return `#${num}`\r\n    }\r\n    getTypeColorBarStyle = (typeIndex) => {\r\n        const {types} = this.props.pokemon\r\n        let style = {}\r\n        if(types[typeIndex]) {\r\n            let backgroundColor = chroma(getTypeColor(types[typeIndex])).saturate(3)\r\n            style.backgroundColor = backgroundColor\r\n\r\n            //Sets width to 100% if there is no second type\r\n            if(typeIndex === 0 && !types[typeIndex + 1]) {\r\n                style.width = '100%'\r\n            }\r\n        }\r\n        return style\r\n    }\r\n    renderStats = () => {\r\n        //stats order is - hp, atk, def, spatk, spdef, speed\r\n        let jsx = []\r\n\r\n        //pushes stat names into jsx\r\n        jsx.push(\r\n            <div className='stat-names'>\r\n                <p>HP</p>\r\n                <p>Atk</p>\r\n                <p>Def</p>\r\n                <p>SpAtk</p>\r\n                <p>SpDef</p>\r\n                <p>Speed</p>\r\n            </div>\r\n        )\r\n        //pushes the stat numbers into jsx\r\n        jsx.push(\r\n            <div className='stat-nums'>\r\n                {this.props.pokemon.stats.map((stat, index) => (\r\n                    <p key={`${this.props.pokemon.name}-stat-${index}`}>{`${stat}`}</p>\r\n                ))}\r\n            </div>\r\n        )\r\n        return jsx\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className='pokemon' onClick={this.addPokemonToTeam}>\r\n                <div className='type-color' style={this.getTypeColorBarStyle(0)}/>\r\n                <div className='type2-color' style={this.getTypeColorBarStyle(1)}/>\r\n                <p className='pokedex-num'>{this.getPokedexNum()}</p>\r\n                <div className='sprite'>\r\n                    <img src={this.props.pokemon.sprite}></img>\r\n                </div>\r\n                <div className='info'>\r\n                    <h1>\r\n                        {`${this.props.pokemon.name.charAt(0).toUpperCase() + this.props.pokemon.name.slice(1)}`}\r\n                    </h1>\r\n\r\n                    <div className='types' >\r\n                        {this.props.pokemon.types.map(type => {\r\n                            return <PokemonType className='type' type={type} key={`${this.props.key} - ${type}`} />\r\n                        })}\r\n                    </div>\r\n                    <div className='stats'>\r\n                        \r\n                        {this.renderStats()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {addToTeam})(Pokemon)\r\n","import { ADD_TO_TEAM, REMOVE_FROM_TEAM } from '../types'\r\n\r\nexport const addToTeam = pokemon => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type:ADD_TO_TEAM,\r\n            payload: {\r\n                pokemonMember: `${pokemon.num}`\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeFromTeam = slot => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: REMOVE_FROM_TEAM,\r\n            payload: {\r\n                slot   \r\n            }\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { FixedSizeList as List} from 'react-window'\r\nimport AutoSizer from 'react-virtualized-auto-sizer'\r\n\r\nimport Pokemon from './Pokemon'\r\n\r\n\r\nexport class PokemonList extends Component {\r\n\r\n    getStatAverage = stats => {\r\n        //gets average of all stats(speed, hp, attack, etc...)\r\n        let avg = (stats[0] + stats[1] + stats[2] + stats[3] + stats[4] + stats[5])/6\r\n        return avg\r\n    }\r\n    getPokemonList = () => {\r\n        let { search, typeFilter, finalEvoFilter, sort } = this.props.searchOptions\r\n\r\n        search = search.toLowerCase().replace(' ', '')\r\n\r\n        let pokemonList = this.props.pokemon\r\n\r\n        if(search !== '') {\r\n            pokemonList = pokemonList.filter(pokemon => pokemon.name.includes(search))\r\n        }\r\n        if(typeFilter !== 'all') {\r\n            pokemonList = pokemonList.filter(pokemon => {\r\n                const types = pokemon.types\r\n                if(types[0] === typeFilter || types[1] === typeFilter) {\r\n                    return pokemon\r\n                }\r\n            })\r\n        }\r\n        //Sorts the pokemonList depending of value of sort\r\n        switch(sort) {\r\n            case 'stat-average':\r\n                pokemonList = pokemonList.sort((a,b) => this.getStatAverage(b.stats) - this.getStatAverage(a.stats))\r\n                break\r\n            case 'stat-speed':\r\n                pokemonList = pokemonList.sort((a,b) => b.stats[5] - a.stats[5])\r\n                break\r\n            case 'stat-hp':\r\n                pokemonList = pokemonList.sort((a,b) => b.stats[0] - a.stats[0])\r\n                break\r\n            case 'stat-attack':\r\n                pokemonList = pokemonList.sort((a,b) => b.stats[1] - a.stats[1])\r\n                break\r\n            case 'stat-defense':\r\n                pokemonList = pokemonList.sort((a,b) => b.stats[2] - a.stats[2])\r\n                break\r\n            case 'stat-specialattack':\r\n                pokemonList = pokemonList.sort((a,b) => b.stats[3] - a.stats[3])\r\n                break\r\n            case 'stat-specialdefense':\r\n                pokemonList = pokemonList.sort((a,b) => b.stats[4] - a.stats[4])\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        if(finalEvoFilter) {\r\n            pokemonList = pokemonList.filter(pokemon => pokemon.isFinalEvo && !pokemon.isBaby)\r\n        }\r\n        return pokemonList\r\n    }\r\n\r\n    render() {\r\n        const pokemonList = this.getPokemonList()\r\n        return (\r\n            <div className='pokemon-list'>\r\n                <AutoSizer >\r\n                    {({ height, width }) => (\r\n                        <List\r\n                        height={height}\r\n                        itemCount={pokemonList.length}\r\n                        itemSize={height/5}\r\n                        width={width}\r\n                    >\r\n                        {({index, style}) => \r\n                            <div style={style}>\r\n                                <Pokemon pokemon={pokemonList[index]} key={`pokemon-${pokemonList[index].num}`}/>\r\n                            </div>\r\n                        }\r\n                    </List>\r\n                    )}\r\n                </AutoSizer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonList\r\n/* */\r\n\r\n                /*<List\r\n                    className='list'\r\n                    height={1000}\r\n                    itemCount={pokemonList.length}\r\n                    itemSize={window.innerHeight/5}\r\n                    width={1000}\r\n                >\r\n                    {({index, style}) => <Pokemon pokemon={pokemonList[index]} style={style}key={`pokemon-${pokemonList[index].num}`}/>}\r\n                </List>*/\r\n\r\n                /*{this.getPokemonList().map(pokemon => (\r\n                        <Pokemon pokemon={pokemon} key={`pokemon-${pokemon.num}`}/>\r\n                ))}*/","import React, { Component } from 'react'\r\n\r\nexport class SearchFilterSortBar extends Component {\r\n    state = {\r\n        search: '',\r\n        typeFilter: 'all',\r\n        finalEvoFilter: false,\r\n        sort: 'pokedex entry'\r\n    }\r\n\r\n    setSearchOptions = () => {\r\n        setTimeout(() => {\r\n            this.props.setSearchOptions({...this.state})\r\n        }, 10)\r\n    }\r\n\r\n    changeSearch = e => {\r\n        this.setState({...this.state, search: e.target.value}, this.setSearchOptions())\r\n    }\r\n    setTypeFilter = e => {\r\n        this.setState({...this.state, typeFilter: e.target.value}, this.setSearchOptions())\r\n    }\r\n    setSort = e => {\r\n        this.setState({...this.state, sort: e.target.value}, this.setSearchOptions())\r\n    }\r\n    toggleFinalEvoFilter = () => {\r\n        const finalEvoFilter = !this.state.finalEvoFilter\r\n        this.setState({...this.state, finalEvoFilter}, this.setSearchOptions())\r\n    }\r\n    getToggleStyle = (bool) => {\r\n        if(bool) return 'on'\r\n        else return 'off'\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='search-filter-sort-bar'>\r\n                <input type='text' onChange={this.changeSearch.bind(this)} placeholder='Search for pokemon'/>\r\n                <div className='type-filter'>\r\n                    <select onChange={this.setTypeFilter.bind(this)}>\r\n                        <option value='all'>All Types</option>\r\n                        <option value='normal'>Normal</option>\r\n                        <option value='grass'>Grass</option>\r\n                        <option value='fire'>Fire</option>\r\n                        <option value='water'>Water</option>\r\n                        <option value='fighting'>Fighting</option>\r\n                        <option value='flying'>Flying</option>\r\n                        <option value='poison'>Poison</option>\r\n                        <option value='ground'>Ground</option>\r\n                        <option value='rock'>Rock</option>\r\n                        <option value='bug'>Bug</option>\r\n                        <option value='ghost'>Ghost</option>\r\n                        <option value='electric'>Electric</option>\r\n                        <option value='psychic'>Psychic</option>\r\n                        <option value='ice'>Ice</option>\r\n                        <option value='dragon'>Dragon</option>\r\n                        <option value='dark'>Dark</option>\r\n                        <option value='steel'>Steel</option>\r\n                        <option value='fairy'>Fairy</option>\r\n                    </select>\r\n                    <div className='arrow'></div>\r\n                </div>\r\n                <button onClick={this.toggleFinalEvoFilter} className={`toggle-finalevo-filter ${this.getToggleStyle(this.state.finalEvoFilter)}`}>\r\n                    Final Evolutions Only\r\n                </button>\r\n                <div className='sort-method'>\r\n                    <select onChange={this.setSort.bind(this)}>\r\n                        <option value='pokedex-entry'>Pokedex Entry</option>\r\n                        <option value='stat-average'> Stat Average</option>\r\n                        <option value='stat-hp'> Stat HP</option>\r\n                        <option value='stat-attack'> Stat Attack</option>\r\n                        <option value='stat-defense'> Stat Defense</option>\r\n                        <option value='stat-specialattack'> Stat SpAttack</option>\r\n                        <option value='stat-specialdefense'> Stat SpDefense</option>\r\n                        <option value='stat-speed'> Stat Speed</option>\r\n                    </select>\r\n                    <div className='arrow'></div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchFilterSortBar\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PokemonList from './PokemonList'\r\nimport SearchFilterSortBar from './SearchFilterSortBar'\r\n\r\nimport './pokemonSelection.scss'\r\n\r\nexport class PokemonSelection extends Component {\r\n    state = {\r\n        searchOptions: {\r\n            search: '',\r\n            typeFilter: 'all',\r\n            finalEvoFilter: false,\r\n            sort: 'pokedex entry'\r\n        }\r\n    }\r\n    setSearchOptions = newSearchOptions => {\r\n        this.setState({...this.state, searchOptions: {...this.state.searchOptions, ...newSearchOptions}})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pokemon-selection'>\r\n                <SearchFilterSortBar setSearchOptions={this.setSearchOptions}/>\r\n                <PokemonList pokemon={this.props.pokemon} searchOptions={this.state.searchOptions}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    pokemon: state.pokemon\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(PokemonSelection)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport chroma from 'chroma-js'\r\n\r\nimport { getTypeColor } from '../../Helpers'\r\n\r\nimport PokemonType from '../PokemonType'\r\n\r\nimport { removeFromTeam } from '../../redux/actions/teamActions'\r\n\r\nexport class PokemonMember extends Component {\r\n\r\n    removePokemonFromTeam = () => {\r\n        this.props.removeFromTeam(this.props.slot)\r\n    }\r\n    getStyle = () => {\r\n        let style = {}\r\n        if(this.props.pokemonMember) {\r\n            const pokemon = this.props.pokemonMember\r\n            style.backgroundColor = getTypeColor(pokemon.types[0]) \r\n            style.borderColor = chroma(getTypeColor(pokemon.types[0])).darken(1)\r\n            if(pokemon.types[1]) {\r\n                style.borderRight = `.8vh solid ${chroma(getTypeColor(pokemon.types[1])).darken(1)}`\r\n                style.borderBottom = `.8vh solid ${chroma(getTypeColor(pokemon.types[1])).darken(1)}`\r\n            }\r\n        }\r\n\r\n        return style\r\n    }\r\n    renderName = () => {\r\n        if(this.props.pokemonMember) {\r\n            let name = this.props.pokemonMember.name\r\n            return name.charAt(0).toUpperCase() + name.slice(1)\r\n        }\r\n    }\r\n    renderSprite = () => {\r\n        const pokemon = this.props.pokemonMember\r\n        if(pokemon) {\r\n            return <img src={pokemon.sprite} alt=''/>\r\n        } else return <div className='pokeball'>         \r\n            <div className='top-half'></div>\r\n            <div className='bottom-half'></div>\r\n            <div className='middle-ball'></div>\r\n        </div>\r\n    }\r\n    renderTypes = () => {\r\n        if(this.props.pokemonMember) {\r\n            return this.props.pokemonMember.types.map(type => (\r\n                <PokemonType type={type} key={`pokemonmember-${this.props.slot}-type-${type}`}/>\r\n            ))\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pokemon'>\r\n                <p className='name'>{this.renderName()}</p>\r\n                <div className='sprite' onClick={this.removePokemonFromTeam} style={this.getStyle()}>\r\n                    {this.renderSprite()}\r\n                    <div className='overlay'></div>\r\n\r\n                </div>\r\n                <div className='types' >\r\n                    {this.renderTypes()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    pokemonMember: state.pokemon.filter(pokemon => pokemon.num === parseInt(state.team.team[parseInt(ownProps.slot)-1]))[0]\r\n})\r\n\r\nexport default connect(mapStateToProps, { removeFromTeam })(PokemonMember)\r\n","import React, { Component } from 'react'\r\n\r\nimport PokemonMember from './PokemonMember'\r\n\r\nimport './teamManager.scss'\r\n\r\nexport class TeamManager extends Component {\r\n    render() {\r\n        return (\r\n            <div className='team-manager'>\r\n                <div className='team-pokemon'>\r\n                    <PokemonMember slot='1' key='pokemonmember-1'/>\r\n                    <PokemonMember slot='2' key='pokemonmember-2'/>\r\n                    <PokemonMember slot='3' key='pokemonmember-3'/>\r\n                    <PokemonMember slot='4' key='pokemonmember-4'/>\r\n                    <PokemonMember slot='5' key='pokemonmember-5'/>\r\n                    <PokemonMember slot='6' key='pokemonmember-6'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeamManager\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { getTypeDefenseStrengths } from '../../Helpers'\r\n\r\nimport PokemonType from '../PokemonType'\r\n\r\nimport './infoPanel.scss'\r\n\r\nexport class InfoPanel extends Component {\r\n    //Gets pokemon data from id obtained from redux store\r\n    getPokemon = (id) => this.props.pokemon.filter(pokemon => pokemon.num === parseInt(id))[0]\r\n\r\n    getAvgStrengths = () => {\r\n        //Gets all the strengths/weaknesses of all the pokemon in team\r\n        const teamTypeStrengths = this.props.team.team.map(memberid => getTypeDefenseStrengths(this.getPokemon(memberid).types))\r\n\r\n        //instantiates the avg strengths/weaknesses\r\n        let avgStrengths = {}\r\n\r\n        //Adds up all the strengths/weaknesses of teamTypeStrengths into avgStrengths\r\n        for(let i=0; i < teamTypeStrengths.length; i++) {\r\n            for(const type in teamTypeStrengths[i]) {\r\n                if(avgStrengths[`${type}`]) {\r\n                    avgStrengths[`${type}`] += teamTypeStrengths[i][`${type}`]\r\n                }\r\n                else avgStrengths[`${type}`] = teamTypeStrengths[i][`${type}`]\r\n            }\r\n        }\r\n        //Divides avgStrengths by the amount of team members to get avg\r\n        for(const type in avgStrengths) {\r\n            avgStrengths[`${type}`] /= teamTypeStrengths.length\r\n        }\r\n        return avgStrengths\r\n    }\r\n    getAvgStats = () => {\r\n        const pokemonStats = this.props.team.team.map(memberid => this.getPokemon(memberid).stats)\r\n        let avgStats = [0, 0, 0, 0, 0, 0]\r\n\r\n        for(let j = 0; j < pokemonStats.length; j++) {\r\n            const stats = pokemonStats[j]\r\n            for(let i = 0; i < stats.length; i++) {\r\n                avgStats[i] += stats[i]        \r\n            }\r\n        }\r\n        avgStats = avgStats.map(stat => Math.round(stat/pokemonStats.length))\r\n\r\n        return avgStats\r\n    }\r\n    renderOverview = () => {\r\n        //Gets data for average strengths/weaknesses\r\n        const avgStrengths = this.getAvgStrengths()\r\n        let good = [], average = [], bad = []\r\n\r\n        //bad is 1.5 - 4x avg  ...  average is 0.5 - 1.5x avg  ...  good is 0 - 0.5x avg\r\n        for(const type in avgStrengths) {\r\n            const strength = avgStrengths[`${type}`]\r\n            if(strength >= 0 && strength <= .5) good.push(type)\r\n            if(strength > .5 && strength <= 1.5) average.push(type)\r\n            if(strength > 1.5 && strength <= 4) bad.push(type)\r\n        }   \r\n    \r\n        //Gets data for average stats\r\n        const avgStats = this.getAvgStats()\r\n        return <div className='overview'>\r\n            <h1 className='title'>Team Overview</h1>\r\n            <div className='types'>\r\n                <div className='good'>\r\n                    <h1>Good against</h1>\r\n                    <p>(0x - 0.5x dmg)</p>\r\n                    <div className='clearleft'></div>\r\n                    {good.map(type => <PokemonType key={`types-good-${type}`} type={type}/>)}\r\n                </div>\r\n                <div className='average'>\r\n                    <h1>Average against</h1>\r\n                    <p>(0.5x - 1.5x dmg)</p>\r\n                    <div className='clearleft'></div>\r\n                    {average.map(type => <PokemonType key={`types-average-${type}`}type={type}/>)}\r\n                </div>\r\n                <div className='bad'>\r\n                    <h1>Bad against</h1>\r\n                    <p>(1.5x - 4x dmg)</p>\r\n                    <div className='clearleft'></div>\r\n                    {bad.map(type => <PokemonType key={`types-bad-${type}`}type={type}/>)}\r\n                </div>\r\n            </div>\r\n            <div className='stats-avg'>\r\n                <div className='stats'>\r\n                    <div className='stat'>\r\n                        <p className='stat-name'>Speed<sub></sub></p>\r\n                        <p className='stat-num'>{avgStats[0]}</p>\r\n                        <p className='stat-avg'>(avg)</p>\r\n                    </div>\r\n                    <div className='stat'>\r\n                        <p className='stat-name'>HP</p>\r\n                        <p className='stat-num'>{avgStats[5]}</p>\r\n                        <p className='stat-avg'>(avg)</p>\r\n\r\n                    </div>\r\n                    <div className='stat'>\r\n                        <p className='stat-name'>Defense</p>\r\n                        <p className='stat-num'>{avgStats[3]}</p>\r\n                        <p className='stat-avg'>(avg)</p>\r\n\r\n                    </div>\r\n                    <div className='stat'>\r\n                        <p className='stat-name'>Attack</p>\r\n                        <p className='stat-num'>{avgStats[4]}</p>\r\n                        <p className='stat-avg'>(avg)</p>\r\n\r\n                    </div>\r\n                    <div className='stat'>\r\n                        <p className='stat-name'>Special Defense</p>\r\n                        <p className='stat-num'>{avgStats[1]}</p>\r\n                        <p className='stat-avg'>(avg)</p>\r\n\r\n                    </div>\r\n                    <div className='stat'>\r\n                        <p className='stat-name'>Special Attack</p>\r\n                        <p className='stat-num'>{avgStats[2]}</p>\r\n                        <p className='stat-avg'>(avg)</p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n    renderInfoPanel = () => {\r\n        if(this.props.team.team.length > 0) {\r\n            return this.renderOverview()\r\n        } else {\r\n            return <div className='empty-team'>\r\n                <h1>Your team is empty! <p>Add a Pokemon to your team to get started</p></h1>\r\n            </div>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='info-panel'>\r\n                {this.renderInfoPanel()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    pokemon: state.pokemon,\r\n    team: state.team\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(InfoPanel)\r\n\r\n/*<div className='columns'>\r\n                    {this.renderColumns()}\r\n                </div>*/","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\n\nimport store from './redux/store'\nimport { fetchPokemon } from './redux/actions/pokemonActions'\n\nimport PokemonSelection from './components/pokemonSelection/PokemonSelection'\nimport TeamManager from './components/teamManager/TeamManager'\nimport InfoPanel from './components/infoPanel/InfoPanel'\n\nimport './App.scss';\n\nexport class App extends Component {\n    componentDidMount() {\n        store.dispatch(fetchPokemon())\n    }\n\n    render() {\n        return (\n            <Provider store={store} >\n                <div className='app'>\n                    <div className='left-column'>\n                        <TeamManager />\n                        <InfoPanel />\n                    </div>\n                    <div className='right-column'>\n                        <PokemonSelection />\n                    </div>\n                </div>\n            </Provider>\n        )\n    }\n}\n\nexport default App\n","import axios from 'axios'\r\n\r\nimport { FETCH_POKEMON } from '../types'\r\n\r\nexport const fetchPokemon = () => {\r\n    return (dispatch) => {\r\n        let pokemon = []\r\n\r\n        let i = 0\r\n        const fetchPoke = setInterval(() => {\r\n            Promise.all(\r\n                [axios.get(`https://pokeapi.co/api/v2/pokemon/${i+1}`), \r\n                axios.get(`https://pokeapi.co/api/v2/pokemon-species/${i+1}/`)]\r\n            )\r\n                .then(response => {\r\n                    const res1 = response[0]\r\n                    const res2 = response[1]\r\n\r\n                    let types = res1.data.types.sort((a,b) => a.slot-b.slot)\r\n                    //Puts 'normal' type in slot 2 if there are two types\r\n                    if(res1.data.types[0].type.name === 'normal' && res1.data.types[1]) {\r\n                        types = types.reverse()\r\n                    }\r\n                    let newPokemon = {\r\n                        num: res1.data.id, \r\n                        name: res1.data.name,\r\n                        types: types.map(type => type.type.name),\r\n                        //stats order is - hp, atk, def, spatk, spdef, speed\r\n                        stats: res1.data.stats.map(stat => stat.base_stat),\r\n                        //isFinalEvo is set during dispatch\r\n                        isFinalEvo: false,\r\n                        isBaby: res2.data.is_baby,\r\n                        sprite: res1.data.sprites.front_default,\r\n                        evolution_chain_url: res2.data.evolution_chain.url\r\n                    }\r\n\r\n                    pokemon.push({...newPokemon})\r\n                })\r\n                .catch(err => {\r\n                    //send pokemon data if recieved all pokemon\r\n                    dispatch({\r\n                        type: FETCH_POKEMON,\r\n                        payload: {\r\n                            pokemon\r\n                        }\r\n                    })\r\n                    clearInterval(fetchPoke)\r\n                })\r\n            //send pokemon data every 250 pokemon\r\n            if(i % 250 === 0 || i === 12) {\r\n                dispatch({\r\n                    type: FETCH_POKEMON,\r\n                    payload: {\r\n                        pokemon\r\n                    }\r\n                })\r\n            }\r\n            i++\r\n        }, 1)\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}