{"version":3,"sources":["redux/reducers/pokemonReducer.js","redux/reducers/teamReducer.js","redux/reducers/index.js","redux/types.js","redux/store.js","Helpers.js","components/PokemonType.js","components/pokemonSelection/Pokemon.js","redux/actions/teamActions.js","components/pokemonSelection/PokemonList.js","components/pokemonSelection/SearchFilterSortBar.js","components/pokemonSelection/PokemonSelection.js","components/teamManager/PokemonMember.js","components/teamManager/TeamManager.js","components/infoPanel/InfoColumn.js","components/infoPanel/InfoPanel.js","App.js","redux/actions/pokemonActions.js","index.js"],"names":["initialState","team","combineReducers","pokemon","state","action","type","payload","sort","a","b","num","i","length","evolution_chain_url","isFinalEvo","newTeam","undefined","push","pokemonMember","splice","slot","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","getTypeColor","color","getTypeDefenseStrengths","types","strengths","normal","flying","ground","bug","steel","water","electric","ice","dark","fighting","poison","rock","ghost","fire","grass","psychic","dragon","fairy","PokemonType","getStyle","props","noBorder","backgroundColor","border","chroma","darken","className","style","this","charAt","toUpperCase","slice","Component","Pokemon","addPokemonToTeam","addToTeam","getPokedexNum","toString","typeIndex","saturate","width","onClick","src","sprite","name","map","key","connect","dispatch","PokemonList","getPokemonList","searchOptions","search","typeFilter","finalEvoFilter","toLowerCase","replace","pokemonList","filter","includes","isBaby","SearchFilterSortBar","setSearchOptions","setTimeout","changeSearch","e","setState","target","value","setTypeFilter","toggleFinalEvoFilter","getToggleStyle","bool","onChange","bind","placeholder","PokemonSelection","newSearchOptions","PokemonMember","removePokemonFromTeam","removeFromTeam","borderColor","borderRight","borderBottom","renderName","renderSprite","alt","renderTypes","ownProps","parseInt","TeamManager","InfoColumn","getStrengths","renderStrengths","val","title","jsx","returnJsx","InfoPanel","getPokemon","id","renderColumns","pokemonid","index","App","fetchPoke","setInterval","Promise","all","axios","get","then","response","res1","res2","data","reverse","newPokemon","stats","stat","base_stat","is_baby","sprites","front_default","evolution_chain","url","catch","err","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4225ed7a.chunk.js","sourcesContent":["import { FETCH_POKEMON } from '../types'\r\n\r\nconst initialState = []\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POKEMON': \r\n            let pokemon = action.payload.pokemon.sort((a, b) => a.num - b.num)\r\n            for(let i=0; i<pokemon.length; i++) {\r\n                //set isFinalEvo\r\n                if(i > 0) {\r\n                    if(pokemon[i].evolution_chain_url !== pokemon[i-1].evolution_chain_url) {\r\n                        pokemon[i-1].isFinalEvo = true\r\n                    }\r\n                }\r\n            }\r\n            return [...pokemon]\r\n        default:\r\n            return state\r\n    }\r\n}","import { ADD_TO_TEAM, REMOVE_FROM_TEAM} from '../types'\r\n\r\nconst initialState = {\r\n    team: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    let newTeam = undefined\r\n    switch(action.type) {\r\n        case ADD_TO_TEAM:\r\n            newTeam = state.team\r\n            if(newTeam.length < 6) {\r\n                newTeam.push(action.payload.pokemonMember)\r\n            }\r\n            return {...state, team: newTeam}                                        \r\n        case REMOVE_FROM_TEAM: \r\n            newTeam = state.team\r\n            newTeam.splice(action.payload.slot - 1, 1)\r\n            return {...state, team: newTeam}                                        \r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport pokemonReducer from './pokemonReducer'\r\nimport teamReducer from './teamReducer'\r\n/* createStore requites the 1st argument(rootReducer) to be a function, hence\r\nwhy we are exporting a function. */\r\n\r\n/* combineReducers takes in an object {} */\r\n\r\n/* combineReducer  combines all reducers. reducers can include postReducer, \r\nauthReducer, todoReducer, assignmentReducer, etc... basically any\r\nreducer you make */\r\n\r\nexport default combineReducers({\r\n    pokemon: pokemonReducer,\r\n    team: teamReducer\r\n})\r\n","export const FETCH_POKEMON = 'FETCH_POKEMON';\r\n\r\nexport const ADD_TO_TEAM = 'ADD_TO_TEAM'\r\nexport const REMOVE_FROM_TEAM = 'REMOVE_FROM_TEAM'\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/index.js'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\n\r\nexport default store;","//get color of type ie - Fire = red, Water = blue\r\nexport const getTypeColor = type => {\r\n    let color = ''\r\n    switch(type) {\r\n        case 'normal':\r\n            color='#bebeb2'\r\n            break\r\n        case 'grass':\r\n            color='#8cd751'\r\n            break\r\n        case 'fire':\r\n            color='#fa5643'\r\n            break\r\n        case 'water':\r\n            color='#56aeff'\r\n            break\r\n        case 'fighting':\r\n            color='#a85644'\r\n            break\r\n        case 'flying':\r\n            color='#79a3ff'\r\n            break\r\n        case 'poison':\r\n            color='#ab5da2'\r\n            break\r\n        case 'ground':\r\n            color='#e9c856'\r\n            break\r\n        case 'rock':\r\n            color='#cdbc72'\r\n            break\r\n        case 'bug':\r\n            color='#c3d21f'\r\n            break\r\n        case 'ghost':\r\n            color='#7975d7'\r\n            break\r\n        case 'electric':\r\n            color='#fde53c'\r\n            break\r\n        case 'psychic':\r\n            color='#f26295'\r\n            break\r\n        case 'ice':\r\n            color='#96f1ff'\r\n            break\r\n        case 'dragon':\r\n            color='#8673ff'\r\n            break\r\n        case 'dark':\r\n            color='#866350'\r\n            break\r\n        case 'steel':\r\n            color='#c4c2db'\r\n            break\r\n        case 'fairy':\r\n            color='#faadff'\r\n            break\r\n        default:\r\n            color='#bebeb2'\r\n            break\r\n    }\r\n    return color\r\n}\r\n\r\n//gets strengths and weaknesses based on types\r\nexport const getTypeDefenseStrengths = types => {\r\n    //initializes strengths/weaknesses\r\n    let strengths = {normal: 1,flying: 1,ground: 1,bug: 1,steel: 1,water: 1,electric: 1,ice: 1,dark: 1,\r\n        fighting: 1,poison: 1,rock: 1,ghost: 1,fire: 1,grass: 1,psychic: 1,dragon: 1,fairy: 1}\r\n\r\n    for(let i = 0; i < types.length; i++) {\r\n        switch(types[i]) {\r\n            case 'normal':\r\n                strengths.fighting *= 2\r\n                strengths.ghost *= 0\r\n                break\r\n            case 'grass':\r\n                strengths.flying *= 2\r\n                strengths.poison *= 2\r\n                strengths.bug *= 2\r\n                strengths.fire *= 2\r\n                strengths.ice *= 2\r\n                strengths.ground *= .5\r\n                strengths.water *= .5\r\n                strengths.grass *= .5\r\n                strengths.electric *= .5\r\n                break\r\n            case 'fire':\r\n                strengths.ground *= 2\r\n                strengths.rock *= 2\r\n                strengths.water *= 2\r\n                strengths.bug *= .5\r\n                strengths.steel *= .5\r\n                strengths.fire *= .5\r\n                strengths.grass *= .5\r\n                strengths.ice *= .5\r\n                strengths.fairy *= .5\r\n                break\r\n            case 'water':\r\n                strengths.grass *= 2\r\n                strengths.electric *= 2\r\n                strengths.steel *= .5\r\n                strengths.fire *= .5\r\n                strengths.water *= .5\r\n                strengths.ice *= .5\r\n                break\r\n            case 'fighting':\r\n                strengths.flying *= 2\r\n                strengths.psychic *= 2\r\n                strengths.fairy *= 2\r\n                strengths.rock *= .5\r\n                strengths.bug *= .5\r\n                strengths.dark *= .5\r\n                break\r\n            case 'flying':\r\n                strengths.rock *= 2\r\n                strengths.electric *= 2\r\n                strengths.ice *= 2\r\n                strengths.grass *= .5\r\n                strengths.bug *= .5\r\n                strengths.fighting *= .5\r\n                strengths.ground *= 0\r\n                break\r\n            case 'poison':\r\n                strengths.ground *= 2\r\n                strengths.psychic *= 2\r\n                strengths.fighting *= .5\r\n                strengths.poison *= .5\r\n                strengths.bug *= .5\r\n                strengths.grass *= .5\r\n                strengths.fairy *= .5\r\n                break\r\n            case 'ground':\r\n                strengths.water *= 2\r\n                strengths.grass *= 2\r\n                strengths.ice *= 2\r\n                strengths.rock *= .5\r\n                strengths.poison *= .5\r\n                strengths.electric *= 0\r\n                break\r\n            case 'rock':\r\n                strengths.fighting *= 2\r\n                strengths.ground *= 2\r\n                strengths.steel *= 2\r\n                strengths.water *= 2\r\n                strengths.grass *= 2\r\n                strengths.normal *= .5\r\n                strengths.flying *= .5\r\n                strengths.poison *= .5\r\n                strengths.fire *= .5\r\n                break\r\n            case 'bug':\r\n                strengths.flying *= 2\r\n                strengths.rock *= 2\r\n                strengths.fire *= 2\r\n                strengths.fighting *= .5\r\n                strengths.ground *= .5\r\n                strengths.grass *= .5\r\n                break\r\n            case 'ghost':\r\n                strengths.ghost *= 2\r\n                strengths.dark *= 2\r\n                strengths.poison *= .5\r\n                strengths.bug *= .5\r\n                strengths.normal *= 0\r\n                strengths.fighting *= 0\r\n                break\r\n            case 'electric':\r\n                strengths.ground *= 2\r\n                strengths.flying *= .5\r\n                strengths.steel *= .5\r\n                strengths.electric *= .5\r\n                break\r\n            case 'psychic':\r\n                strengths.bug *= 2\r\n                strengths.ghost *= 2\r\n                strengths.dark *= 2\r\n                strengths.fighting *= .5\r\n                strengths.psychic *= .5\r\n                break\r\n            case 'ice':\r\n                strengths.fighting *= 2\r\n                strengths.rock *= 2\r\n                strengths.steel *= 2\r\n                strengths.fire *= 2\r\n                strengths.ice *= .5\r\n                break\r\n            case 'dragon':\r\n                strengths.ice *= 2\r\n                strengths.dragon *= 2\r\n                strengths.fairy *= 2\r\n                strengths.fire *= .5\r\n                strengths.water *= .5\r\n                strengths.grass *= .5\r\n                strengths.electric *= .5\r\n                break\r\n            case 'dark':\r\n                strengths.fighting *= 2\r\n                strengths.bug *= 2\r\n                strengths.fairy *= 2\r\n                strengths.ghost *= .5\r\n                strengths.dark *= .5\r\n                strengths.psychic *= 0\r\n                break\r\n            case 'steel':\r\n                strengths.fighting *= 2\r\n                strengths.ground *= 2\r\n                strengths.fire *= 2\r\n                strengths.normal *= .5\r\n                strengths.flying *= .5\r\n                strengths.rock *= .5\r\n                strengths.bug *= .5\r\n                strengths.steel *= .5\r\n                strengths.grass *= .5\r\n                strengths.psychic *= .5\r\n                strengths.ice *= .5\r\n                strengths.dragon *= .5\r\n                strengths.fairy *= .5\r\n                strengths.poison *= 0\r\n                break\r\n            case 'fairy':\r\n                strengths.poison *= 2\r\n                strengths.steel *= 2\r\n                strengths.dark *= .5\r\n                strengths.bug *= .5\r\n                strengths.fighting *= .5\r\n                strengths.dragon *= 0\r\n                break \r\n            default:\r\n                break\r\n        }\r\n    }\r\n    return strengths\r\n}\r\n","import React, { Component } from 'react'\r\nimport chroma from 'chroma-js'\r\n\r\nimport { getTypeColor } from '../Helpers.js'\r\n\r\nimport './misc.scss'\r\n\r\nexport class PokemonType extends Component {\r\n\r\n    getStyle = () => {\r\n        if(this.props.noBorder) {\r\n            return { backgroundColor: `${getTypeColor(this.props.type)}`}\r\n        } else {\r\n            return { backgroundColor: `${getTypeColor(this.props.type)}`,\r\n                    border: `.25vw solid ${chroma(getTypeColor(this.props.type)).darken(.5)}`}\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pokemon-type' style={this.getStyle()}>\r\n                {this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonType\r\n","import React, { Component } from 'react'\r\nimport chroma from 'chroma-js'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PokemonType from '../PokemonType'\r\n\r\nimport { getTypeColor } from '../../Helpers'\r\n\r\nimport { addToTeam } from '../../redux/actions/teamActions'\r\n\r\nexport class Pokemon extends Component {\r\n\r\n    addPokemonToTeam = () => {\r\n        //Adds this pokemon to the team\r\n        this.props.addToTeam(this.props.pokemon)\r\n    }\r\n\r\n    getPokedexNum = () => {\r\n        let { num } = this.props.pokemon\r\n        num = num.toString()\r\n        \r\n        if(num.length === 1) num = '00' + num\r\n        if(num.length === 2) num = '0' + num\r\n\r\n        return `#${num}`\r\n    }\r\n    getStyle = (typeIndex) => {\r\n        const {types} = this.props.pokemon\r\n        let style = {}\r\n        if(types[typeIndex]) {\r\n            let backgroundColor = chroma(getTypeColor(types[typeIndex])).saturate(3)\r\n            style.backgroundColor = backgroundColor\r\n\r\n            //Sets width to 100% if there is no second type\r\n            if(typeIndex === 0 && !types[typeIndex + 1]) {\r\n                style.width = '100%'\r\n            }\r\n        }\r\n        return style\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pokemon' onClick={this.addPokemonToTeam}>\r\n                <div className='type-color' style={this.getStyle(0)}/>\r\n                <div className='type2-color' style={this.getStyle(1)}/>\r\n                <div className='sprite'>\r\n                    <img src={this.props.pokemon.sprite}></img>\r\n                </div>\r\n                <div className='info'>\r\n                    <h1>{`${this.props.pokemon.name.charAt(0).toUpperCase() + this.props.pokemon.name.slice(1)} ${this.getPokedexNum()}`}</h1>\r\n\r\n                    <div className='types' >\r\n                        {this.props.pokemon.types.map(type => {\r\n                            return <PokemonType className='type' type={type} key={`${this.props.key} - ${type}`} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {addToTeam})(Pokemon)\r\n","import { ADD_TO_TEAM, REMOVE_FROM_TEAM } from '../types'\r\n\r\nexport const addToTeam = pokemon => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type:ADD_TO_TEAM,\r\n            payload: {\r\n                pokemonMember: `${pokemon.num}`\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeFromTeam = slot => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: REMOVE_FROM_TEAM,\r\n            payload: {\r\n                slot   \r\n            }\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Pokemon from './Pokemon'\r\n\r\n\r\nexport class PokemonList extends Component {\r\n\r\n    getPokemonList = () => {\r\n        let { search, typeFilter, finalEvoFilter, sort } = this.props.searchOptions\r\n\r\n        search = search.toLowerCase().replace(' ', '')\r\n\r\n        let pokemonList = this.props.pokemon\r\n\r\n        if(search !== '') {\r\n            pokemonList = pokemonList.filter(pokemon => pokemon.name.includes(search))\r\n        }\r\n        if(typeFilter !== 'all') {\r\n            pokemonList = pokemonList.filter(pokemon => {\r\n                const types = pokemon.types\r\n                if(types[0] === typeFilter || types[1] === typeFilter) {\r\n                    return pokemon\r\n                }\r\n            })\r\n        }\r\n        if(finalEvoFilter) {\r\n            pokemonList = pokemonList.filter(pokemon => pokemon.isFinalEvo && !pokemon.isBaby)\r\n        }\r\n        return pokemonList\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pokemon-list'>\r\n                {this.getPokemonList().map(pokemon => (\r\n                    <Pokemon pokemon={pokemon} key={pokemon.num}/>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonList\r\n","import React, { Component } from 'react'\r\n\r\nexport class SearchFilterSortBar extends Component {\r\n    state = {\r\n        search: '',\r\n        typeFilter: 'all',\r\n        finalEvoFilter: false,\r\n        sort: ''\r\n    }\r\n\r\n    setSearchOptions = () => {\r\n        setTimeout(() => {\r\n            this.props.setSearchOptions({...this.state})\r\n        }, 10)\r\n    }\r\n\r\n    changeSearch = e => {\r\n        this.setState({...this.state, search: e.target.value}, this.setSearchOptions())\r\n    }\r\n    setTypeFilter = e => {\r\n        this.setState({...this.state, typeFilter: e.target.value}, this.setSearchOptions())\r\n    }\r\n    toggleFinalEvoFilter = () => {\r\n        const finalEvoFilter = !this.state.finalEvoFilter\r\n        this.setState({...this.state, finalEvoFilter}, this.setSearchOptions())\r\n    }\r\n    getToggleStyle = (bool) => {\r\n        if(bool) return 'on'\r\n        else return 'off'\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='search-filter-sort-bar'>\r\n                <input type='text' onChange={this.changeSearch.bind(this)} placeholder='Search for pokemon'/>\r\n                <select onChange={this.setTypeFilter.bind(this)}>\r\n\r\n                    <option value='all'>All</option>\r\n                    <option value='normal'>Normal</option>\r\n                    <option value='grass'>Grass</option>\r\n                    <option value='fire'>Fire</option>\r\n                    <option value='water'>Water</option>\r\n                    <option value='fighting'>Fighting</option>\r\n                    <option value='flying'>Flying</option>\r\n                    <option value='poison'>Poison</option>\r\n                    <option value='ground'>Ground</option>\r\n                    <option value='rock'>Rock</option>\r\n                    <option value='bug'>Bug</option>\r\n                    <option value='ghost'>Ghost</option>\r\n                    <option value='electric'>Electric</option>\r\n                    <option value='psychic'>Psychic</option>\r\n                    <option value='ice'>Ice</option>\r\n                    <option value='dragon'>Dragon</option>\r\n                    <option value='dark'>Dark</option>\r\n                    <option value='steel'>Steel</option>\r\n                    <option value='fairy'>Fairy</option>\r\n                </select>\r\n                <button onClick={this.toggleFinalEvoFilter} className={`toggle-finalevo-filter ${this.getToggleStyle(this.state.finalEvoFilter)}`}>\r\n                    Final Evolutions Only\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchFilterSortBar\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PokemonList from './PokemonList'\r\nimport SearchFilterSortBar from './SearchFilterSortBar'\r\n\r\nimport './pokemonSelection.scss'\r\n\r\nexport class PokemonSelection extends Component {\r\n    state = {\r\n        searchOptions: {\r\n            search: '',\r\n            typeFilter: 'all',\r\n            finalEvoFilter: false,\r\n            sort: ''\r\n        }\r\n    }\r\n    setSearchOptions = newSearchOptions => {\r\n        this.setState({...this.state, searchOptions: {...this.state.searchOptions, ...newSearchOptions}})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pokemon-selection'>\r\n                <SearchFilterSortBar setSearchOptions={this.setSearchOptions}/>\r\n                <PokemonList pokemon={this.props.pokemon} searchOptions={this.state.searchOptions}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    pokemon: state.pokemon\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(PokemonSelection)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport chroma from 'chroma-js'\r\n\r\nimport { getTypeColor } from '../../Helpers'\r\n\r\nimport PokemonType from '../PokemonType'\r\n\r\nimport { removeFromTeam } from '../../redux/actions/teamActions'\r\n\r\nexport class PokemonMember extends Component {\r\n\r\n    removePokemonFromTeam = () => {\r\n        this.props.removeFromTeam(this.props.slot)\r\n    }\r\n    getStyle = () => {\r\n        let style = {}\r\n        if(this.props.pokemonMember) {\r\n            const pokemon = this.props.pokemonMember\r\n            style.backgroundColor = getTypeColor(pokemon.types[0]) \r\n            style.borderColor = chroma(getTypeColor(pokemon.types[0])).darken(1)\r\n            if(pokemon.types[1]) {\r\n                style.borderRight = `.7vh solid ${chroma(getTypeColor(pokemon.types[1])).darken(1)}`\r\n                style.borderBottom = `.7vh solid ${chroma(getTypeColor(pokemon.types[1])).darken(1)}`\r\n            }\r\n        }\r\n\r\n        return style\r\n    }\r\n    renderName = () => {\r\n        if(this.props.pokemonMember) {\r\n            let name = this.props.pokemonMember.name\r\n            return name.charAt(0).toUpperCase() + name.slice(1)\r\n        }\r\n    }\r\n    renderSprite = () => {\r\n        const pokemon = this.props.pokemonMember\r\n        if(pokemon) {\r\n            return <img src={pokemon.sprite} alt=''/>\r\n        } else return null\r\n    }\r\n    renderTypes = () => {\r\n        if(this.props.pokemonMember) {\r\n            return this.props.pokemonMember.types.map(type => (\r\n                <PokemonType type={type}/>\r\n            ))\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pokemon'>\r\n                <p className='name'>{this.renderName()}</p>\r\n                <div className='sprite' onClick={this.removePokemonFromTeam} style={this.getStyle()}>\r\n                    <div className='overlay'></div>\r\n                    {this.renderSprite()}\r\n                </div>\r\n                <div className='types' >\r\n                    {this.renderTypes()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    pokemonMember: state.pokemon.filter(pokemon => pokemon.num === parseInt(state.team.team[parseInt(ownProps.slot)-1]))[0]\r\n})\r\n\r\nexport default connect(mapStateToProps, { removeFromTeam })(PokemonMember)\r\n","import React, { Component } from 'react'\r\n\r\nimport PokemonMember from './PokemonMember'\r\n\r\nimport './teamManager.scss'\r\n\r\nexport class TeamManager extends Component {\r\n    render() {\r\n        return (\r\n            <div className='team-manager'>\r\n                <div className='team-pokemon'>\r\n                    <PokemonMember slot='1'/>\r\n                    <PokemonMember slot='2'/>\r\n                    <PokemonMember slot='3'/>\r\n                    <PokemonMember slot='4'/>\r\n                    <PokemonMember slot='5'/>\r\n                    <PokemonMember slot='6'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeamManager\r\n","import React, { Component } from 'react'\r\n\r\nimport PokemonType from '../PokemonType'\r\n\r\nimport { getTypeDefenseStrengths } from '../../Helpers'\r\n\r\nimport './infoPanel.scss'\r\n\r\nexport class InfoColumn extends Component {\r\n    getStrengths = () => getTypeDefenseStrengths(this.props.pokemon.types)\r\n   \r\n    //val is the strength to look for ie - 4, 2, 1, .5, 0\r\n    renderStrengths = (val, title) => {\r\n        let jsx = []\r\n\r\n        //only return jsx if found match\r\n        let returnJsx = true\r\n        \r\n        jsx.push(<h1>{title}</h1>)\r\n        for(const type in this.getStrengths()) {\r\n            if(this.getStrengths()[`${type}`] === val) {\r\n                returnJsx = true\r\n                jsx.push(\r\n                    <PokemonType type={type} noBorder={true}/>\r\n                )\r\n            }\r\n        }\r\n        if(returnJsx )return jsx\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='column'>\r\n                <div className='row'>\r\n                    {this.renderStrengths(0, 'Immune from')}\r\n                </div>\r\n                <div className='row'>\r\n                    {this.renderStrengths(.25, '1/4 from')}\r\n                </div>\r\n                <div className='row'>\r\n                    {this.renderStrengths(.5, '1/2 from')}\r\n                </div>\r\n                <div className='row'>\r\n                    {this.renderStrengths(2, '2x from')}\r\n                </div>\r\n                <div className='row'>\r\n                    {this.renderStrengths(4, '4x from')}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoColumn\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport InfoColumn from './InfoColumn'\r\n\r\nimport './infoPanel.scss'\r\n\r\nexport class InfoPanel extends Component {\r\n    //Gets pokemon data from id obtained from redux store\r\n    getPokemon = (id) => this.props.pokemon.filter(pokemon => pokemon.num === parseInt(id))[0]\r\n    renderColumns = () => {\r\n        return this.props.team.team.map((pokemonid,index) => {\r\n            return <InfoColumn key={`column-${index+1}`} pokemon={this.getPokemon(pokemonid)}/>\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='info-panel'>\r\n                <div className='columns'>\r\n                    {this.renderColumns()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    pokemon: state.pokemon,\r\n    team: state.team\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(InfoPanel)\r\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\n\nimport store from './redux/store'\nimport { fetchPokemon } from './redux/actions/pokemonActions'\n\nimport PokemonSelection from './components/pokemonSelection/PokemonSelection'\nimport TeamManager from './components/teamManager/TeamManager'\nimport InfoPanel from './components/infoPanel/InfoPanel'\n\nimport './App.scss';\n\nexport class App extends Component {\n    componentDidMount() {\n        store.dispatch(fetchPokemon())\n    }\n\n    render() {\n        return (\n            <Provider store={store} >\n                <div className='app'>\n                    <div className='left-column'>\n                        <TeamManager />\n                        <InfoPanel />\n                    </div>\n                    <div className='right-column'>\n                        <PokemonSelection />\n                    </div>\n                </div>\n            </Provider>\n        )\n    }\n}\n\nexport default App\n","import axios from 'axios'\r\n\r\nimport { FETCH_POKEMON } from '../types'\r\n\r\nexport const fetchPokemon = () => {\r\n    return (dispatch) => {\r\n        let pokemon = []\r\n\r\n        let i = 0\r\n        const fetchPoke = setInterval(() => {\r\n            Promise.all(\r\n                [axios.get(`https://pokeapi.co/api/v2/pokemon/${i+1}`), \r\n                axios.get(`https://pokeapi.co/api/v2/pokemon-species/${i+1}/`)]\r\n            )\r\n                .then(response => {\r\n                    const res1 = response[0]\r\n                    const res2 = response[1]\r\n\r\n                    let types = res1.data.types.sort((a,b) => a.slot-b.slot)\r\n                    //Puts 'normal' type in slot 2 if there are two types\r\n                    if(res1.data.types[0].type.name === 'normal' && res1.data.types[1]) {\r\n                        types = types.reverse()\r\n                    }\r\n                    let newPokemon = {\r\n                        num: res1.data.id, \r\n                        name: res1.data.name,\r\n                        types: types.map(type => type.type.name),\r\n                        //stats order is - speed, sdef, satk, def, atk, hp\r\n                        stats: res1.data.stats.map(stat => stat.base_stat),\r\n                        //isFinalEvo is set during dispatch\r\n                        isFinalEvo: false,\r\n                        isBaby: res2.data.is_baby,\r\n                        sprite: res1.data.sprites.front_default,\r\n                        evolution_chain_url: res2.data.evolution_chain.url\r\n                    }\r\n\r\n                    pokemon.push({...newPokemon})\r\n                })\r\n                .catch(err => {\r\n                    //send pokemon data if recieved all pokemon\r\n                    dispatch({\r\n                        type: FETCH_POKEMON,\r\n                        payload: {\r\n                            pokemon\r\n                        }\r\n                    })\r\n                    clearInterval(fetchPoke)\r\n                })\r\n            //send pokemon data every 250 pokemon\r\n            if(i % 250 === 0 || i === 12) {\r\n                dispatch({\r\n                    type: FETCH_POKEMON,\r\n                    payload: {\r\n                        pokemon\r\n                    }\r\n                })\r\n            }\r\n            i++\r\n        }, 1)\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}