{"version":3,"sources":["redux/reducers/pokemonReducer.js","redux/reducers/teamReducer.js","redux/reducers/index.js","redux/types.js","redux/store.js","components/PokemonType.js","components/pokemonSelection/Pokemon.js","redux/actions/teamActions.js","components/pokemonSelection/PokemonList.js","components/pokemonSelection/PokemonSelection.js","components/teamManager/PokemonMember.js","components/teamManager/TeamManager.js","App.js","redux/actions/pokemonActions.js","index.js"],"names":["initialState","team","combineReducers","pokemon","state","action","type","payload","newTeam","undefined","length","push","pokemonMember","splice","slot","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","PokemonType","getStyle","backgroundColor","getTypeColor","props","border","chroma","darken","className","style","this","charAt","toUpperCase","slice","Component","Pokemon","addPokemonToTeam","addToTeam","onClick","src","sprite","name","types","map","key","connect","dispatch","num","PokemonList","PokemonSelection","PokemonMember","getPokemon","filter","parseInt","removePokemonFromTeam","removeFromTeam","borderColor","renderName","renderSprite","alt","renderTypes","console","log","ownProps","TeamManager","App","color","i","fetchPoke","setInterval","axios","get","then","res","data","sort","a","b","reverse","id","species","stats","stat","base_stat","sprites","front_default","catch","err","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4caaae51.chunk.js","sourcesContent":["import { FETCH_POKEMON } from '../types'\r\n\r\nconst initialState = []\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POKEMON': \r\n            return [...action.payload.pokemon]\r\n        default:\r\n            return state\r\n    }\r\n}","import { ADD_TO_TEAM, REMOVE_FROM_TEAM} from '../types'\r\n\r\nconst initialState = {\r\n    team: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    let newTeam = undefined\r\n    switch(action.type) {\r\n        case ADD_TO_TEAM:\r\n            newTeam = state.team\r\n            if(newTeam.length < 6) {\r\n                newTeam.push(action.payload.pokemonMember)\r\n            }\r\n            return {...state, team: newTeam}                                        \r\n        case REMOVE_FROM_TEAM: \r\n            newTeam = state.team\r\n            newTeam.splice(action.payload.slot - 1, 1)\r\n            return {...state, team: newTeam}                                        \r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport pokemonReducer from './pokemonReducer'\r\nimport teamReducer from './teamReducer'\r\n/* createStore requites the 1st argument(rootReducer) to be a function, hence\r\nwhy we are exporting a function. */\r\n\r\n/* combineReducers takes in an object {} */\r\n\r\n/* combineReducer  combines all reducers. reducers can include postReducer, \r\nauthReducer, todoReducer, assignmentReducer, etc... basically any\r\nreducer you make */\r\n\r\nexport default combineReducers({\r\n    pokemon: pokemonReducer,\r\n    team: teamReducer\r\n})\r\n","export const FETCH_POKEMON = 'FETCH_POKEMON';\r\n\r\nexport const ADD_TO_TEAM = 'ADD_TO_TEAM'\r\nexport const REMOVE_FROM_TEAM = 'REMOVE_FROM_TEAM'\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/index.js'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport chroma from 'chroma-js'\r\n\r\nimport './misc.scss'\r\n\r\nexport class PokemonType extends Component {\r\n\r\n    getStyle = () => {\r\n        return { backgroundColor: `${window.getTypeColor(this.props.type)}`,\r\n                border: `.25vw solid ${chroma(window.getTypeColor(this.props.type)).darken(.5)}`}\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pokemon-type' style={this.getStyle()}>\r\n                {this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonType\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PokemonType from '../PokemonType'\r\n\r\nimport { addToTeam } from '../../redux/actions/teamActions'\r\n\r\nexport class Pokemon extends Component {\r\n\r\n    addPokemonToTeam = () => {\r\n        //Adds this pokemon to the team\r\n        this.props.addToTeam(this.props.pokemon)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='pokemon' onClick={this.addPokemonToTeam}>\r\n                <div className='sprite'>\r\n                    <img src={this.props.pokemon.sprite}></img>\r\n                </div>\r\n                <div className='info'>\r\n                    <h1>{this.props.pokemon.name.charAt(0).toUpperCase() + this.props.pokemon.name.slice(1)}</h1>\r\n\r\n                    <div className='types' >\r\n                        {this.props.pokemon.types.map(type => {\r\n                            return <PokemonType className='type' type={type} key={`${this.props.key} - ${type}`} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {addToTeam})(Pokemon)\r\n","import { ADD_TO_TEAM, REMOVE_FROM_TEAM } from '../types'\r\n\r\nexport const addToTeam = pokemon => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type:ADD_TO_TEAM,\r\n            payload: {\r\n                pokemonMember: `${pokemon.num}`\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeFromTeam = slot => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: REMOVE_FROM_TEAM,\r\n            payload: {\r\n                slot   \r\n            }\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Pokemon from './Pokemon'\r\n\r\n\r\nexport class PokemonList extends Component {\r\n    render() {\r\n        return (\r\n            <div className='pokemon-list'>\r\n                {this.props.pokemon.map(pokemon => (\r\n                    <Pokemon pokemon={pokemon} key={pokemon.num}/>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonList\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PokemonList from './PokemonList'\r\n\r\nimport './pokemonSelection.scss'\r\n\r\nexport class PokemonSelection extends Component {\r\n    render() {\r\n        return (\r\n            <div className='pokemon-selection'>\r\n                <PokemonList  pokemon={this.props.pokemon}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    pokemon: state.pokemon\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(PokemonSelection)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport chroma from 'chroma-js'\r\n\r\nimport PokemonType from '../PokemonType'\r\n\r\nimport { removeFromTeam } from '../../redux/actions/teamActions'\r\n\r\nexport class PokemonMember extends Component {\r\n\r\n    //Gets pokemon data from id obtained from redux store\r\n    getPokemon = () => this.props.pokemon.filter(pokemon => pokemon.num === parseInt(this.props.pokemonMember))[0]\r\n\r\n    removePokemonFromTeam = () => {\r\n        this.props.removeFromTeam(this.props.slot)\r\n    }\r\n    getStyle = () => {\r\n        let style = {}\r\n        if(this.getPokemon()) {\r\n            const pokemon = this.getPokemon()\r\n            style.backgroundColor = window.getTypeColor(pokemon.types[0]) \r\n            style.borderColor = chroma(window.getTypeColor(pokemon.types[0])).darken(1)\r\n        }\r\n\r\n        return style\r\n    }\r\n    renderName = () => {\r\n        if(this.getPokemon()) {\r\n            let name = this.getPokemon().name\r\n            return name.charAt(0).toUpperCase() + name.slice(1)\r\n        }\r\n    }\r\n    renderSprite = () => {\r\n        const pokemon = this.getPokemon()\r\n        if(pokemon) {\r\n            return <img src={pokemon.sprite} alt=''/>\r\n        } else return null\r\n    }\r\n    renderTypes = () => {\r\n        console.log(this.getPokemon())\r\n        if(this.getPokemon()) {\r\n            return this.getPokemon().types.map(type => (\r\n                <PokemonType type={type}/>\r\n            ))\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pokemon'>\r\n                <p className='name'>{this.renderName()}</p>\r\n                <div className='sprite' onClick={this.removePokemonFromTeam} style={this.getStyle()}>\r\n                    <div className='overlay'></div>\r\n                    {this.renderSprite()}\r\n                </div>\r\n                <div className='types' >\r\n                    {this.renderTypes()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    pokemon: state.pokemon,\r\n    pokemonMember: state.team.team[parseInt(ownProps.slot)-1]\r\n})\r\n\r\nexport default connect(mapStateToProps, { removeFromTeam })(PokemonMember)\r\n","import React, { Component } from 'react'\r\n\r\nimport PokemonMember from './PokemonMember'\r\n\r\nimport './teamManager.scss'\r\n\r\nexport class TeamManager extends Component {\r\n    render() {\r\n        return (\r\n            <div className='team-manager'>\r\n                <div className='team-pokemon'>\r\n                    <PokemonMember slot='1'/>\r\n                    <PokemonMember slot='2'/>\r\n                    <PokemonMember slot='3'/>\r\n                    <PokemonMember slot='4'/>\r\n                    <PokemonMember slot='5'/>\r\n                    <PokemonMember slot='6'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeamManager\r\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\n\nimport store from './redux/store'\nimport { fetchPokemon } from './redux/actions/pokemonActions'\n\nimport PokemonSelection from './components/pokemonSelection/PokemonSelection'\nimport TeamManager from './components/teamManager/TeamManager'\nimport './App.scss';\n\nexport class App extends Component {\n    componentDidMount() {\n        store.dispatch(fetchPokemon())\n        window.getTypeColor = this.getTypeColor\n    }\n    getTypeColor = type => {\n        let color = ''\n        switch(type) {\n            case 'normal':\n                color='#bebeb2'\n                break\n            case 'grass':\n                color='#8cd751'\n                break\n            case 'fire':\n                color='#fa5643'\n                break\n            case 'water':\n                color='#56aeff'\n                break\n            case 'fighting':\n                color='#a85644'\n                break\n            case 'flying':\n                color='#79a3ff'\n                break\n            case 'poison':\n                color='#ab5da2'\n                break\n            case 'ground':\n                color='#e9c856'\n                break\n            case 'rock':\n                color='#cdbc72'\n                break\n            case 'bug':\n                color='#c3d21f'\n                break\n            case 'ghost':\n                color='#7975d7'\n                break\n            case 'electric':\n                color='#fde53c'\n                break\n            case 'psychic':\n                color='#f26295'\n                break\n            case 'ice':\n                color='#96f1ff'\n                break\n            case 'dragon':\n                color='#8673ff'\n                break\n            case 'dark':\n                color='#866350'\n                break\n            case 'steel':\n                color='#c4c2db'\n                break\n            case 'fairy':\n                color='#faadff'\n                break\n            default:\n                color='#bebeb2'\n                break\n        }\n        return color\n    }\n    render() {\n        return (\n            <Provider store={store} >\n                <div className='app'>\n                    <TeamManager />\n                    <PokemonSelection />\n                </div>\n            </Provider>\n        )\n    }\n}\n\nexport default App\n","import axios from 'axios'\r\n\r\nimport { FETCH_POKEMON } from '../types'\r\n\r\nexport const fetchPokemon = () => {\r\n    return (dispatch) => {\r\n        let pokemon = []\r\n\r\n        let i = 0\r\n        const fetchPoke = setInterval(() => {\r\n            axios.get(`https://pokeapi.co/api/v2/pokemon/${i+1}`)\r\n                .then(res => {\r\n                    let types = res.data.types.sort((a,b) => a.slot-b.slot)\r\n\r\n                    //Puts 'normal' type in slot 2 if there are two types\r\n                    if(types[0].type.name === 'normal' && types[1]) {\r\n                        types = types.reverse()\r\n                    }\r\n                    pokemon.push({\r\n                        num: res.data.id, \r\n                        name: res.data.species.name,\r\n                        types: types.map(type => type.type.name),\r\n                        //stats order is - speed, sdef, satk, def, atk, hp\r\n                        stats: res.data.stats.map(stat => stat.base_stat),\r\n                        sprite: res.data.sprites.front_default\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    pokemon.sort((a, b) => a.num - b.num)\r\n                    dispatch({\r\n                        type: FETCH_POKEMON,\r\n                        payload: {\r\n                            pokemon\r\n                        }\r\n                    })\r\n                    clearInterval(fetchPoke)\r\n                })\r\n            if(i % 250 === 0 || i === 12) {\r\n                pokemon.sort((a, b) => a.num - b.num)\r\n                dispatch({\r\n                    type: FETCH_POKEMON,\r\n                    payload: {\r\n                        pokemon\r\n                    }\r\n                })\r\n            }\r\n            i++\r\n        }, 1)\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}